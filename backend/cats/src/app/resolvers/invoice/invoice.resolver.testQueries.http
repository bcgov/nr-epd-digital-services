# GraphQL queries for testing the invoice resolver.
# These are expected to be run in the context of the test or development
# environment with the VSCode httpYac extension.
# The specific variables will need to be set based on the current state of the
# database.

@protocol=http
@host=localhost:4005
@token=secret
@applicationId=1
@invoiceId=1
@lineItemId=1

### getInvoiceByApplicationId

POST {{protocol}}://{{host}}/graphql
Content-Type: application/json
Authorization: Bearer {{token}}

query GetInvoicesByApplicationId($applicationId: Int!) {
  getInvoicesByApplicationId(applicationId: $applicationId) {
    success
    httpStatusCode
    message
    invoices {
      id
      subject
      issuedDate
      dueDate
      status
      totalInCents
    }
  }
}

{
  "applicationId": {{applicationId}}
}

### createInvoice

POST {{protocol}}://{{host}}/graphql
Content-Type: application/json
Authorization: Bearer {{token}}

mutation CreateInvoice($invoiceData: InvoiceInputDto!) {
  createInvoice(invoiceData: $invoiceData) {
    success
    httpStatusCode
    message
    invoice {
      id
      applicationId
      recipientId
      invoiceId
      subject
      issuedDate
      dueDate
      status
      taxExempt
      subtotalInCents
      gstInCents
      pstInCents
      totalInCents
      createdBy
      updatedBy
      createdAt
      updatedAt
      lineItems {
        id
        type
        description
        quantity
        unitPriceInCents
        totalInCents
        createdAt
        updatedAt
        createdBy
        updatedBy
      }
    }
  }
}

{
  "invoiceData": {
    "applicationId": {{applicationId}},
    "recipientId": 2,
    "invoiceId": null,
    "subject": "Test Invoice",
    "issuedDate": "2025-05-02T00:00:00.000Z",
    "dueDate": "2025-05-09T00:00:00.000Z",
    "status": "DRAFT",
    "taxExempt": false,
    "subtotalInCents": 10000,
    "gstInCents": 500,
    "pstInCents": 300,
    "totalInCents": 10800,
    "lineItems": [
      {
        "type": "service",
        "description": "Consulting services",
        "quantity": 2,
        "unitPriceInCents": 5000,
        "totalInCents": 10000
      }
    ]
  }
}

### updateInvoice

POST {{protocol}}://{{host}}/graphql
Content-Type: application/json
Authorization: Bearer {{token}}

mutation UpdateInvoice($id: Int!, $updateData: InvoiceInputDto!) {
  updateInvoice(id: $id, updateData: $updateData) {
    success
    httpStatusCode
    message
    invoice {
      id
      applicationId
      recipientId
      invoiceId
      subject
      issuedDate
      dueDate
      status
      taxExempt
      subtotalInCents
      gstInCents
      pstInCents
      totalInCents
      createdBy
      updatedBy
      createdAt
      updatedAt
      lineItems {
        id
        type
        description
        quantity
        unitPriceInCents
        totalInCents
        createdAt
        updatedAt
        createdBy
        updatedBy
      }
    }
  }
}

{
  "id": {{invoiceId}},
  "updateData": {
    "applicationId": {{applicationId}},
    "recipientId": 2,
    "invoiceId": null,
    "subject": "Updated Invoice Subject",
    "issuedDate": "2025-05-05T00:00:00.000Z",
    "dueDate": "2025-06-05T00:00:00.000Z",
    "status": "PAID",
    "taxExempt": false,
    "subtotalInCents": 100000,
    "gstInCents": 5000,
    "pstInCents": 7000,
    "totalInCents": 112000,
    "lineItems": [
      {
        "id": {{lineItemId}},
        "type": "service",
        "description": "Consulting Service",
        "quantity": 2,
        "unitPriceInCents": 50000,
        "totalInCents": 100000,
        "createdAt": "2025-05-02T00:00:00.000Z",
        "createdBy": "testUser"
      }
    ]
  }
}

### deleteInvoice
POST {{protocol}}://{{host}}/graphql
Content-Type: application/json
Authorization: Bearer {{token}}

mutation DeleteInvoice($id: Int!) {
  deleteInvoice(id: $id) {
    httpStatusCode
    success
    message
  }
}

{
  "id": {{invoiceId}}
}

### downloadInvoicePdf
POST {{protocol}}://{{host}}/graphql
Content-Type: application/json
Authorization: Bearer {{token}}

query DownloadInvoicePdf($id: Int!) {
  downloadInvoicePdf(id: $id) {
    success
    httpStatusCode
    message
    pdfContent
    filename
  }
}

{
  "id": {{invoiceId}}
}