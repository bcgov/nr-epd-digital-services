apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: "EPD Digital Services"
    tags: "EPD"
    iconClass: icon-js
labels:
  app: ${NAME}-${COMPONENT}
  app.kubernetes.io/part-of: ${NAME}-${COMPONENT}
parameters:
- name: NAME
  description: Module name
  value: epd
- name: COMPONENT
  description: Component name
  value: frontend
- name: IMAGE_TAG
  description: Image tag to use
  value: latest
- name: DOMAIN
  value: apps.silver.devops.gov.bc.ca
- name: CPU_REQUEST
  value: "25m"
- name: MEMORY_REQUEST
  value: "50Mi"
- name: CPU_LIMIT
  value: "75m"
- name: MEMORY_LIMIT
  value: "150Mi"
- name: MIN_REPLICAS
  description: The minimum amount of replicas
  value: "1"
- name: MAX_REPLICAS
  description: The maximum amount of replicas
  value: "3"
- name: CONTAINER_PORT
  description: The port on which the application will be accessible
  required: true
- name: REGISTRY
  description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
  value: ghcr.io
- name: PROMOTE
  description: Image (namespace/name:tag) to promote/import
  value: bcgov/nr-epd-digital-services/frontend
- name: ENV
  description: The Environment on which it is deployed
  required: true
- name: REACT_APP_AUTH_CLIENT_ID
  description: "The Keycloak client ID"
  value: epd-web
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-config
  data:
    config.js: |
      window["_env_"] = {
        "REACT_APP_NODE_ENV": "production",
        "REACT_APP_AUTH_AUTHORITY": "https://epd-keycloak-${ENV}.apps.silver.devops.gov.bc.ca/auth/realms/forms-flow-ai/",
        "REACT_APP_AUTH_CLIENT_ID": "${REACT_APP_AUTH_CLIENT_ID}",
        "REACT_APP_AUTH_REDIRECT_URI": "https://epd-frontend-${ENV}.apps.silver.devops.gov.bc.ca/dashboard",
        "REACT_APP_AUTH_LOGOUT_REDIRECT_URI": "https://logontest7.gov.bc.ca/clp-cgi/logoff.cgi?retnow=1&returl=https://epd-keycloak-${ENV}.apps.silver.devops.gov.bc.ca/auth/realms/forms-flow-ai/protocol/openid-connect/logout?post_logout_redirect_uri=https://epd-frontend-${ENV}.apps.silver.devops.gov.bc.ca",
        "REACT_APP_BACKEND_API": "https://epd-backend-gateway-${ENV}.apps.silver.devops.gov.bc.ca"
      }
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    lookupPolicy:
      local: false
    tags:
    - name: ${IMAGE_TAG}
      from:
        kind: DockerImage
        name: ${REGISTRY}/${PROMOTE}:${IMAGE_TAG}
      referencePolicy:
        type: Local
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${NAME}-${COMPONENT}
    strategy:
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: ${NAME}-${COMPONENT}
      spec:
        containers:
        - image: "${REGISTRY}/${PROMOTE}:${IMAGE_TAG}"
          imagePullPolicy: Always
          name: ${NAME}-${COMPONENT}
          env:
          - name: REACT_APP_AUTH_REDIRECT_URI
            value: https://${NAME}-frontend-${ENV}.${DOMAIN}
          ports:
          - containerPort: ${{CONTAINER_PORT}}
            protocol: TCP
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          readinessProbe:
            httpGet:
              path: /
              port: ${{CONTAINER_PORT}}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /
              port: ${{CONTAINER_PORT}}
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    ports:
    - name: ${CONTAINER_PORT}-tcp
      protocol: TCP
      port: 80
      targetPort: ${{CONTAINER_PORT}}
    selector:
      app: ${NAME}-${COMPONENT}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    host: ${NAME}-${COMPONENT}-${ENV}.${DOMAIN}
    port:
      targetPort: ${CONTAINER_PORT}-tcp
    to:
      kind: Service
      name: ${NAME}-${COMPONENT}
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    name: "${NAME}-${COMPONENT}"
  spec:
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: "${NAME}-${COMPONENT}"
    minReplicas: ${{MIN_REPLICAS}}
    maxReplicas: ${{MAX_REPLICAS}}
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 100
