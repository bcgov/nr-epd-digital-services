apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: "EPD backend-applications"
    tags: "epd-backend"
    iconClass: icon-js
labels:
  app: ${NAME}-${COMPONENT}
  app.kubernetes.io/part-of: ${NAME}-${COMPONENT}
parameters:
- name: NAME
  description: Module name
  value: epd
- name: COMPONENT
  description: Component name
  value: backend-applications
- name: IMAGE_TAG
  description: Image tag to use
  value: latest
- name: DOMAIN
  value: apps.silver.devops.gov.bc.ca
- name: CPU_REQUEST
  value: "125m"
- name: MEMORY_REQUEST
  value: "150Mi"
- name: CPU_LIMIT
  value: "275m"
- name: MEMORY_LIMIT
  value: "450Mi"
- name: REPLICAS
  description: Number of replicas
  value: "2"
- name: CONTAINER_PORT
  description: The port on which the application will be accessible
  required: true
- name: REGISTRY
  description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
  value: ghcr.io
- name: PROMOTE
  description: Image (namespace/name:tag) to promote/import
  value: bcgov/nr-epd-digital-services/backend/applications
- name: INIT_IMAGE
  description: Image (namespace/name:tag) to promote/import
  value: bcgov/nr-epd-digital-services/backend/applications-migration
- name: ENV
  description: The Environment on which it is deployed
  required: true
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    replicas: "${REPLICAS}"
    selector:
      matchLabels:
        app: ${NAME}-${COMPONENT}
    template:
      metadata:
        labels:
          app: ${NAME}-${COMPONENT}
      spec:
        containers:
        - name: ${NAME}-${COMPONENT}
          image: ${REGISTRY}/${PROMOTE}:${IMAGE_TAG}
          ports:
          - containerPort: ${{CONTAINER_PORT}}
            protocol: TCP
          env:
          - name: NODE_ENV
            value: production
          - name: POSTGRESQL_HOST
            valueFrom:
              configMapKeyRef:
                name: ${NAME}-database
                key: POSTGRESQL_HOST
          - name: POSTGRES_DATABASE
            valueFrom:
              configMapKeyRef:
                name: ${NAME}-database
                key: POSTGRES_DATABASE
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          readinessProbe:
            httpGet:
              path: /
              port: ${{CONTAINER_PORT}}
            initialDelaySeconds: 10
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /
              port: ${{CONTAINER_PORT}}
            initialDelaySeconds: 10
            periodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: ${{CONTAINER_PORT}}
    selector:
      app: ${NAME}-${COMPONENT}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${NAME}-${COMPONENT}
    name: ${NAME}-${COMPONENT}
  spec:
    host: ${NAME}-${COMPONENT}-${ENV}.${DOMAIN}
    to:
      kind: Service
      name: ${NAME}-${COMPONENT}
      weight: 100
    port:
      targetPort: http
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    name: ${NAME}-${COMPONENT}
  spec:
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: ${NAME}-${COMPONENT}
    minReplicas: 1
    maxReplicas: 3
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: "400Mi"
