FROM node:14.17.0-alpine as build-stage


# expect a build-time variable
ARG FORMFLOW_SOURCE_REPO_BRANCH
# use the value to set the ENV var default
ENV FORMFLOW_SOURCE_REPO_BRANCH master
# expect a build-time variable
ARG FORMFLOW_SOURCE_REPO_URL
# use the value to set the ENV var default
ENV FORMFLOW_SOURCE_REPO_URL https://github.com/AOT-Technologies/forms-flow-ai.git

#install git and bash
RUN apk update && apk upgrade && \
    apk add --no-cache bash git openssh

# Clone code
RUN git clone -b ${FORMFLOW_SOURCE_REPO_BRANCH} ${FORMFLOW_SOURCE_REPO_URL} /tmp/forms-flow-ai/
RUN cp -r /tmp/forms-flow-ai/forms-flow-bpm/. /forms-flow-bpm/

# # Maven build
FROM maven:3.8.1-openjdk-17-slim AS MAVEN_TOOL_CHAIN
RUN cp /forms-flow-bpm/pom*.xml /tmp/
RUN cp /forms-flow-bpm/settings-docker.xml /usr/share/maven/ref/

# WORKDIR /tmp/
# # This allows Docker to cache most of the maven dependencies
# RUN mvn -s /usr/share/maven/ref/settings-docker.xml dependency:resolve-plugins dependency:resolve dependency:go-offline -B
# COPY src /tmp2/src/
# RUN mvn -s /usr/share/maven/ref/settings-docker.xml package -P default

# # Final custom slim java image (for apk command see 17-jdk-alpine-slim)
# FROM openjdk:17-jdk-alpine

# ENV JAVA_VERSION=17-ea+14
# ENV JAVA_HOME=/opt/java/openjdk-17\
#     PATH="/opt/java/openjdk-17/bin:$PATH"

# EXPOSE 8080
# # OpenShift has /app in the image, but it's missing when doing local development - Create it when missing
# RUN test ! -d /app && mkdir /app || :
# # Add spring boot application
# RUN mkdir -p /app
# COPY --from=MAVEN_TOOL_CHAIN /tmp2/target/forms-flow-bpm.jar ./app
# RUN chmod a+rwx -R /app
# WORKDIR /app
# VOLUME /tmp2
# ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom", "-Dpolyglot.js.nashorn-compat=true", "-Dpolyglot.engine.WarnInterpreterOnly=false", "-jar","/app/forms-flow-bpm.jar"]
