{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "frontend.fullname" . }}
  labels:
    {{- include "frontend.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.frontend.deploymentStrategy }}
  {{- if not .Values.frontend.autoscaling.enabled }}
  replicas: {{ .Values.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        {{- include "frontend.labels" . | nindent 8 }}
    spec:
      {{- if .Values.frontend.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ include "frontend.fullname" . }}
          securityContext:
            capabilities:
              add: [ "NET_BIND_SERVICE" ]
          # image: "{{.Values.global.registry}}/{{.Values.global.repository}}/{{ .Values.frontend.imageName | default 'frontend' }}:{{ .Values.global.tag | default .Chart.AppVersion }}"
          image: "{{.Values.global.registry}}/{{.Values.global.repository}}/cats-frontend:{{ .Values.global.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ default "Always" .Values.frontend.imagePullPolicy }}
          env:
            - name: LOG_LEVEL
              value: "info"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 30
          livenessProbe:
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 15m
              memory: 25Mi
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html/config/config.js # Mount target path inside the container, match dockerfile workdir
              subPath: config.js
      volumes:
        - name: config-volume
          configMap:
            name:  {{ include "frontend.fullname" . }}  # ConfigMap name
            items:
              - key: config.js
                path: config.js 
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ include "frontend.fullname" . }}
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"

{{- end }}
