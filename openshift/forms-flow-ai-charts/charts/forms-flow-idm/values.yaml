---
keycloak:
  auth:
    adminUser: admin
  tls:
    enabled: true
    autoGenerated: true
  extraEnvVars: 
    - name: KEYCLOAK_ADMIN_USER
      value: admin
    - name: KEYCLOAK_EXTRA_ARGS
      value: "-Dkeycloak.import=/realm/realm.json" 
    - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: JAVA_OPTS
      value: >-
        -Dkeycloak.profile.feature.scripts=enabled
        -Dkeycloak.profile.feature.upload_scripts=enabled
        -Djava.net.preferIPv4Stack=true

  extraVolumes: 
    - name: "forms-flow-idm-realm-config"
      configMap:
        name: "forms-flow-idm"
    - name: formsflow-themes
      emptyDir: {}
  extraVolumeMounts: 
    - name: "forms-flow-idm-realm-config"
      mountPath: "/realm/"
      readOnly: false
    - mountPath: /opt/bitnami/keycloak/themes
      name: formsflow-themes
      subPath: themes
  initContainers:
    - name: formsflow-themes
      image: formsflow/forms-flow-idm-theme
      imagePullPolicy: Always
      securityContext:
        runAsUser: 1001
      command: ["/bin/sh","-c"]
      args:
      - "mkdir /opt/bitnami/keycloak/themes && \
         cp -rf /my-theme/* /opt/bitnami/keycloak/themes && \
         ls -ltra /opt/bitnami/keycloak/themes"
      volumeMounts:
      - mountPath: /opt/bitnami/keycloak
        name: formsflow-themes
  image:
    registry: "docker.io"
    repository: "bitnami/keycloak" 
    tag: 14.0.0
 
  postgresql:
    enabled: false
  
  externalDatabase:
    host: "forms-flow-idm-postgresql-ha-pgpool"
    port: 5432
    user: postgres
    database: postgres
    password: "postgres"

  resources:
    limits:
      cpu: 700m
      memory: 3Gi
    requests:
      cpu: 500m
      memory: 2Gi
  
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: false

  keycloakConfigCli:
    containerSecurityContext:
      enabled: false
    podSecurityContext:
      enabled: false
  
  service:
    type: ClusterIP
  ingress:
    ingressClassName: ""
    annotations:
  #    kubernetes.io/ingress.class: nginx
    extraTls:
      - {}
    enabled: true
    hostname: #DEFINE_ME
    pathtype: Prefix
    servicePort: http
    tls: true

  httpRelativePath: /auth/
  cache:
    enabled: false


postgresql-ha:  
  postgresql:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/postgresql-repmgr
      tag: 15.1.0-debian-11-r0
    fullnameOverride: "forms-flow-idm-postgresql"
    replicaCount: 3
    containerPorts:
      postgresql: 5432
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
      runAsNonRoot: true
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    username: postgres
    password: "postgres"
    database: "forms-flow-idm"
    postgresPassword: "postgres"

    repmgrUsername: repmgr
    repmgrPassword: "repmgr"
    repmgrDatabase: repmgr
    repmgrLogLevel: NOTICE
    repmgrConnectTimeout: 5
    repmgrReconnectAttempts: 2
    repmgrReconnectInterval: 3
    repmgrFenceOldPrimary: false
    repmgrChildNodesCheckInterval: 5
    repmgrChildNodesConnectedMinCount: 1
    repmgrChildNodesDisconnectTimeout: 30
    initdbScripts:
      init_script.sql: |
         GRANT pg_read_all_data TO postgres;
         GRANT pg_write_all_data TO postgres;
         GRANT USAGE ON SCHEMA public TO postgres;
         GRANT CONNECT ON DATABASE "forms-flow-idm" to postgres;
         GRANT ALL PRIVILEGES ON DATABASE "forms-flow-idm" to postgres;
         GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO postgres;   

         GRANT pg_read_all_data TO repmgr;
         GRANT pg_write_all_data TO repmgr;
         GRANT USAGE ON SCHEMA public TO repmgr;
         GRANT CONNECT ON DATABASE "forms-flow-idm" to repmgr;
         GRANT ALL PRIVILEGES ON DATABASE "forms-flow-idm" to repmgr;
         GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO repmgr;

         alter database "forms-flow-idm" set default_transaction_read_only = off;
  pgpool:
    image:
      registry: docker.io
      repository: bitnami/pgpool
      tag: 4.3.3-debian-11-r28
      digest: ""
      pullPolicy: IfNotPresent
    replicaCount: 1
    podSecurityContext:
      enabled: false
      fsGroup: 1001
    containerSecurityContext:
      enabled: false
      runAsUser: 1001
      runAsNonRoot: true
      readOnlyRootFilesystem: false
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    containerPorts:
      postgresql: 5432
    adminUsername: admin
    adminPassword: "admin"
    service:
      type: ClusterIP
      ports:
        metrics: 9187
  persistence:
    enabled: true
    storageClass: ""
    mountPath: /bitnami/postgresql
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  service:
    type: ClusterIP
    ports:
      postgresql: 5432
    portName: postgresql
    nodePorts:
      postgresql: ""